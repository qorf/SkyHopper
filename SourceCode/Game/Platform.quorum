package Templates.SkyHopper

use Libraries.Containers.Array
use Libraries.Compute.Vector2
use Libraries.Game.Graphics.Color

/*Platforms are the main components of each level, giving solid ground for the player to land on and jump from.
Platforms can be stationary or they can move, and platforms can be customized with different properties and colors.*/
class Platform
    
    number x = 0
    number y = 0
    integer width = 0
    integer height = 0
    
    Color color = undefined
    Color borderColor = undefined
    number borderThickness = 0
    
    Array<Vector2> waypoints
    number speed = 80
    number pointWaitTime = 0
    number pathWaitTime = 1
    
    on create
        borderThickness = borderThickness:GetNotANumberValue()
    end
    
    /*This action sets the x and y position of the platform.*/
    action SetPosition(number x, number y)
        me:x = x
        me:y = y
    end
    
    /*This action sets the platform's width and height, in pixels.*/
    action SetSize(integer width, integer height)
        me:width = width
        me:height = height
    end
    
    /*This action returns the platform's x position.*/
    action GetX returns number
        return x
    end

    /*This action sets the platform's x position.*/
    action SetX(number x)
        me:x = x
    end

    /*This action returns the platform's y position.*/
    action GetY returns number
        return y
    end

    /*This action sets the platform's y position.*/
    action SetY(number y)
        me:y = y
    end

    /*This action returns the platform's width, in pixels.*/
    action GetWidth returns integer
        return width
    end

    /*This action sets the platform's width, in pixels.*/
    action SetWidth(integer width)
        me:width = width
    end

    /*This action returns the platform's height, in pixels.*/
    action GetHeight returns integer
        return height
    end

    /*This action sets the platform's height, in pixels.*/
    action SetHeight(integer height)
        me:height = height
    end
    
/*The AddWaypoint action adds a new waypoint to the platform, using an x, y coordinate. The platform will automatically
move from its starting position to each of its waypoints, then back again. */
    action AddWaypoint(number x, number y)
        Vector2 vector
        vector:Set(x, y)
        waypoints:Add(vector)
    end
    
    /*This action returns an array of all waypoints added to this platform.*/
    action GetWaypoints returns Array<Vector2>
        return waypoints
    end

    /*This action returns the platform's primary color.*/
    action GetColor returns Color
        return color
    end

    /*This action sets the platform's primary color.*/
    action SetColor(Color color)
        me:color = color
    end

    /*This action returns the color of the platform's borders.*/
    action GetBorderColor returns Color
        return borderColor
    end

    /*This action sets the color of the platform's borders.*/
    action SetBorderColor(Color borderColor)
        me:borderColor = borderColor
    end

    /*This action returns the border thickness of the platforms, in pixels. By default, this value is 2.*/
    action GetBorderThickness returns number
        return borderThickness
    end

/*This action sets the border thickness of the platforms, in pixels. By default, this value is 2.*/
    action SetBorderThickness(number borderThickness)
        me:borderThickness = borderThickness
    end

/*This action returns how many seconds the platform will wait at each waypoint, if the platform has any. By default, this value is 0.*/
    action GetPointWaitTime returns number
        return pointWaitTime
    end

/*This action sets how many seconds the platform will wait at each waypoint, if the platform has any. By default, this value is 0.*/
    action SetPointWaitTime(number pointWaitTime)
        me:pointWaitTime = pointWaitTime
    end

/*This action returns how many seconds the platform will wait after travelling through all of its waypoints, if the platform has any. By default, this value is 1.*/
    action GetPathWaitTime returns number
        return pathWaitTime
    end

/*This action sets how many seconds the platform will wait after travelling through all of its waypoints, if the platform has any. By default, this value is 1.*/
    action SetPathWaitTime(number pathWaitTime)
        me:pathWaitTime = pathWaitTime
    end

/*This action returns how fast the item moves in pixels per second, if the item can move. By default, this value is 80.*/
    action GetSpeed returns number
        return speed
    end

/*This action sets how fast the item moves in pixels per second, if the item can move. By default, this value is 80.*/
    action SetSpeed(number speed)
        me:speed = speed
    end

end