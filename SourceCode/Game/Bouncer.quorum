package Templates.SkyHopper

use Libraries.Containers.Array
use Libraries.Compute.Vector2

/*Bouncers are round floating objects that push away the player if they touch them. They can be
stationary or they can move back and forth. You can use them as obstacles to get in the way, or
you can use them to launch the player to new places!*/
class Bouncer
number x = 0
    number y = 0
    number force = 300
    
Array<Vector2> waypoints
    number speed = 80
    number pointWaitTime = 0
    number pathWaitTime = 1
    
    /*This action sets the x and y position of the bouncer.*/
action SetPosition(number x, number y)
        me:x = x
        me:y = y
    end
    
    /*This action sets the amount of force that the bouncer applies to the player when the player touches it.
Increasing the force will throw the player farther. By default, this value is 500.*/
    action SetForce(number force)
        me:force = force
    end
    
    /*This action returns the amount of force that the bouncer applies to the player when the player touches it.
By default, this value is 300.*/
    action GetForce returns number
        return force
    end
    
    /*The AddWaypoint action adds a new waypoint to the bouncer, using an x, y coordinate. The bouncer will automatically
move from its starting position to each of its waypoints, then back again. */
action AddWaypoint(number x, number y)
        Vector2 vector
        vector:Set(x, y)
        waypoints:Add(vector)
    end
    
    /*This action returns an array of all waypoints that have been added to this item.*/
    action GetWaypoints returns Array<Vector2>
        return waypoints
    end
    
    /*This action returns how many seconds the bouncer will wait at each waypoint, if the bouncer has any. By default, this value is 0.*/
action GetPointWaitTime returns number
        return pointWaitTime
    end

    /*This action sets how many seconds the bouncer will wait at each waypoint, if the bouncer has any. By default, this value is 0.*/
    action SetPointWaitTime(number pointWaitTime)
        me:pointWaitTime = pointWaitTime
    end

/*This action returns how many seconds the bouncer will wait after travelling through all of its waypoints, if the bouncer has any. By default, this value is 1.*/
    action GetPathWaitTime returns number
        return pathWaitTime
    end

/*This action sets how many seconds the bouncer will wait after travelling through all of its waypoints, if the bouncer has any. By default, this value is 1.*/
    action SetPathWaitTime(number pathWaitTime)
        me:pathWaitTime = pathWaitTime
    end

    /*This action returns how fast the item moves in pixels per second, if the item can move. By default, this value is 80.*/
    action GetSpeed returns number
        return speed
    end

/*This action sets how fast the item moves in pixels per second, if the item can move. By default, this value is 80.*/
    action SetSpeed(number speed)
        me:speed = speed
    end

    /*This action returns the item's x coordinate on the screen.*/
    action GetX returns number
        return x
    end

/*This action sets the item's x coordinate on the screen.*/
    action SetX(number x)
        me:x = x
    end

/*This action sets the item's y coordinate on the screen.*/
    action GetY returns number
        return y
    end

/*This action sets the item's y coordinate on the screen.*/
    action SetY(number y)
        me:y = y
    end
end